[ { "title": "UI changes and integrations page", "url": "/posts/integrations-page/", "categories": "Vue, Bootstrap, Element-UI, jQuery", "tags": "enhancement, ux, ui", "date": "2022-08-12 21:14:00 +0800", "snippet": "Prolouge: Navigation UI EnhancementCreating a new page for the website is easy. What’s difficult is where to insert the navigation element for the new section. I dove into the existing navigation component to see where to put the new link.How to override an override? The answer: you don’tThe navigation component is a customized bootstrap navbar, it collapses on smaller screens and expands into a horizontal menu on large screens and up. What I mean by customized is that the existing css is littered with overrides to bootstrap default layout using the most horrendous css feature of all, the !important keyword specifier.I removed some of !important declarations so I could specify new css properties without overriding the override. C in CSS meant cascading and it was named after it for a reason.The curse of legacy from the most successful JavaScript framework of all timeOn the JavaScript side of things, I ought to face an inevitable storm. Vue 2 is the main client for handling interactivity on the webpage alognside with familiar names I’ve known for the past 2 decade.The navigation menu is awesome, interaction is enhanced by smooth scrolling to page sections using jQuery along with Bootstrap Scrollspy.Cool, now I wanted to try and add the new link using Vue Router’s router-link component. So I did and for whatever reason in the whole milky way, Evan You decided to append leading slash to the link’s generated href attribute. The hardcoded links uses the native hash selector (#section) to jump between sections on the page. What I have now is something like /#section :(. Sizzlejs is now yelling at me that it didn’t know where to look for /#section, returning unrecognized expression error. I went and have gone for the hardcoded links routeI went and have gone for the hardcoded links route, only to realized after three days that it was jQuery giving the error. It uses Sizzle to validate selectors passed on the jQuery selector $(). Obviously if we have something like:$(\".nav-item a\").on(\"click\", function (event) { let href = $(this).attr(\"href\"); // &lt;- \"/#section\" $(\"html, body\").stop().animate({ scrollTop: $(href).offset().top - 50 }, 1500, \"easeInOutExpo\"); event.preventDefault();});Sizzle unrecognized expression /#section happens when calling $(href).offset().top. Trimming the leading slash fixes the issue.$(\".nav-item a\").on(\"click\", function (event) { let href = $(this).attr(\"href\"); // trim leading slash href = href.replace(/\\//g, ''); $(\"html, body\").stop().animate({ scrollTop: $(href).offset().top - 50 }, 1500, \"easeInOutExpo\"); event.preventDefault();});With this we can now safely use router-links together with jQuery selector. Wish I had realized this sooner.Footsteps leave no traceThe drawback with controlling navigation links with JavaScript is that we are forced to used event.preventDefault(). Literally throwing away all native functionalities provided by the browser. After clicking several anchor links and seeing the transition from one section to another, I was happy. But when I pressed the browser back button it threw me to the an empty tab where I started. I was expecting to scroll smoothly back to one of the previous sections on the page. History API to the rescue!History API to the rescue! I just need to push the navigated links to the history stack after successfully scrolling to a section.$(\"html, body\").stop().animate({ scrollTop: $(href).offset().top - 50}, 1500, \"easeInOutExpo\");window.history.pushState({}, '', href);Then to go back from previous history we can listen to windows popstate event.$(window).bind('popstate', function (event) { const state = event.originalEvent.state; const href = window.location.hash; if (state) { $(\"html, body\").stop().animate({ scrollTop: $(href).offset().top - 50 }, 1500, \"easeInOutExpo\"); }});Here is the image of the updated navigation bar complete with UX enhancements.Mobile NavigationDesktop NavigationIntegrations Page Creating a new page for the website is easySo here is the mock up for the intial layout of the integrations page.Mobile Navigation" }, { "title": "Staging", "url": "/posts/changelog/", "categories": "Laravel, Deployment", "tags": "changelog", "date": "2022-07-26 23:44:00 +0800", "snippet": "ChangesThese are the recent changes pushed to staging.Laravel Override ModelMakeCommand default namespace to App\\Models app/Console/Kernel.php app/Console/Commands/ Make RESELLER_ACCOUNT env naming consistent app/Http/Controllers/PricingController.php Update and singularize Users model and delete app/User.php app/Models/Users.php app/User.php app/Models/User.php database/factories/ModelFactory.php database/migrations/2014_10_12_000000_create_users_table.php Update GuzzleHttp from ^6.3 to ^7.4 composer.json composer.lock Update phpunit.xml phpunit.xml Fix duplicate sending of headers when testing with phpunit bootstrap/app.php A silly attempt to centralize and manage env variables config/env.php Implement blade layout template resources/views/layouts/ resources/views/index.blade.php resources/views/errors/Vue Update package.json lodash, vue-cookie and vue/runtime-dom package.json package-lock.json Update assets public/css/app.css public/js/app.js Fix axios api calls resources/assets/js/api/countries.js resources/assets/js/api/pricing.js Fix mysql 8 error on laravel 5 config/database.php Catch undefined routes and redirect to 404 page resources/assets/js/app.js resources/assets/js/components/Example.vue resources/assets/js/components/NotFound.vue Update Home.vue text, links, method, country detect resources/assets/js/views/Home.vue Fix relative path to image resources/assets/js/views/Policy.vue resources/assets/js/views/Terms.vueGit Specify gitignore files and directories .gitignore storage/framework/cache/WorkflowsGithub Actions Github Actions automated testing .github/laravel.yml Update changelog automatically using release notes .github/workflows/update-changelog.yml CHANGELOG.md Draft release automatically when pull requests are merged into default branch .github/workflows/release-drafter.yml .github/release-drafter.yml Clean workflow logs manually .github/workflows/clean-workflow-logs.ymlTerminal based workflow Deployment using deployphp/deployer deploy.phpWork in ProgressLaravel Reseller account feature app/Http/Controllers/ResellerController.php Implement Unit tests for Controllers tests/Unit/AccountControllerTest.php tests/Unit/ResellerControllerTest.php tests/Feature/Example.phpWorkflow Deployment workflow for staging environment using deployphp/deployer (currently testing) .github/workflows/deploy-staging.yml" } ]
